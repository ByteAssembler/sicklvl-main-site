---
import type { PerfectImageProps } from 'src/env';
import { fileNameToBlobUrlPath, fileNameToBoxFileUrlPath } from 'src/utils/file-manager';

interface Props extends PerfectImageProps {}

const {
    class: cls = "",
    title = "",
    alt = "",
    decoding,
    loading,
    width: wid,
    height: hei,
    images,
    forceSizesW,
    inForUrl,
} = Astro.props;

const urlGetter = inForUrl === "portfolio" ? fileNameToBlobUrlPath : fileNameToBoxFileUrlPath;

const allowedImages = forceSizesW == null || forceSizesW.length === 0
    ? images
    : images.filter(({ width }) => forceSizesW.includes(width))
        .sort((a, b) => {
            // The order should be the same as the forceSizesW
            return forceSizesW.indexOf(a.width) - forceSizesW.indexOf(b.width);
        });

const src = urlGetter(allowedImages && allowedImages.length > 0 ? allowedImages[0].file_name : "");

const srcset = Array.isArray(allowedImages) ? allowedImages.map(({ file_name, width }) => `${urlGetter(file_name)} ${width}w`).join(", ") : "";

---

<img
    title={title}
    class={cls}
    src={src}
    srcset={srcset}
    width={wid ?? "auto"}
    height={hei ?? "auto"}
    decoding={decoding}
    loading={loading}
    alt={alt}
/>
