---
import type { FilesOrFolderUploadProps } from "src/env";
import Input from "./input.astro";

interface Props extends FilesOrFolderUploadProps {}

const randomIdBase =
    Math.random().toString(36).substring(7) +
    Math.random().toString(36).substring(7);

const randomIdInput = randomIdBase + "-input";

const {
    name = "",
    size = "normal",
    accept = "*",
    required = false,
    id = "",
    class: className = "",
} = Astro.props;

const onchange = `(() => {
    const isChecked = document.getElementById("${randomIdBase}").checked;
    const input = document.getElementById("${randomIdInput}");

    if (isChecked) { // Folder
        input.setAttribute("webkitdirectory", "true");
        input.setAttribute("mozdirectory", "true");
    } else { // Files
        input.removeAttribute("webkitdirectory");
        input.removeAttribute("mozdirectory");
    }
})()`;
---

<div class="flex items-center justify-end gap-4">
    <span class="text-white text-sm italic">Upload Folder</span>
    <Input class="!m-0" type="checkbox" id={randomIdBase} onchange={onchange} />
</div>

<input
    type="file"
    multiple
    data-size={size}
    name={name}
    accept={accept}
    id={[id, randomIdInput].filter((item) => !!item).join(" ")}
    required={required}
    class:list={[
        "font-inconsolata text-lg font-bold tracking-widest",
        className,
    ]}
/>

<style scoped>
    input {
        border: 2px solid white;
        background-color: black;
        color: white;
        overflow: visible;

        min-width: 0;
        max-width: 100%;
        width: 100%;

        height: 3rem;

        cursor: pointer;
    }

    input::file-selector-button {
        margin-right: 15px;
        padding: 0 15px;
    }

    input *,
    input::placeholder,
    input::-webkit-file-upload-button,
    input::file-selector-button {
        height: 100%;
    }

    input:hover,
    input:active {
        background-color: white;
        color: black;
    }

    /*
	input:hover::placeholder, input:active::placeholder {
		background-color: white;
		color: black;
	}
	*/

    input:focus-visible {
        outline: 1;
        outline-width: 1px;
        outline-offset: 2px;
        outline-color: white;
        outline-style: solid;
    }

    input[type="file"]::file-selector-button {
        background-color: black;
        color: white;
        overflow: visible;

        min-width: 0;
        max-width: 100%;

        border: none;
        border-right: 2px solid white;

        cursor: pointer;
    }

    input[type="file"]:hover::file-selector-button,
    input[type="file"]::file-selector-button:hover {
        border-color: black;
        background-color: white;
        color: black;
    }

    input[data-size="small"]::file-selector-button {
        display: none;
    }

    input[data-size="small"] {
        padding: 0 0.5rem;
        width: 150px;
        height: 2rem;
    }
</style>
