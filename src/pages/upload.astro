<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Chunked File Upload</title>
    </head>
    <body>
        <h1>Upload Large File in Chunks</h1>
        <input type="file" id="fileInput" />
        <button id="upload-btn">Upload</button>
    </body>
</html>

<script>
    async function uploadFile() {
        const fileInput = document.getElementById("fileInput");
        if (!fileInput) {
            console.error("File input element not found");
            return;
        }
        const files = (fileInput as HTMLInputElement).files;
        if (!files || files.length === 0) {
            console.error("No files selected");
            return;
        }
        const file = files[0];
        const chunkSize = 1024 * 1024 * 10; // 10MB
        const totalChunks = Math.ceil(file.size / chunkSize);
        const randomPrefix =
            Math.random().toString(36).substring(7) +
            Math.random().toString(36).substring(7);

        let uploadedChunks = 0;

        for (let chunkIndex = 0; chunkIndex < totalChunks; chunkIndex++) {
            const start = chunkIndex * chunkSize;
            const end = Math.min(start + chunkSize, file.size);
            const chunk = file.slice(start, end);
            const reader = new FileReader();

            reader.onload = async (e) => {
                if (!e.target) {
                    console.error("FileReader event target is null");
                    return;
                }
                const buffer = e.target.result;

                await new Promise((resolve) => setTimeout(resolve, 1000));

                const response = await fetch(
                    "/api/box-large-files-upload/test-id",
                    {
                        method: "POST",
                        headers: {
                            "x-file-metadata": JSON.stringify({
                                randomPrefix: randomPrefix,
                                chunkIndex: chunkIndex,
                                totalChunks: totalChunks,
                                totalFileSize: file.size,
                                mimeType: file.type,
                                fileName: file.name,
                                combine: false,
                            }),
                        },
                        body: buffer,
                    },
                );

                console.log(`Chunk ${chunkIndex + 1} uploaded`);

                uploadedChunks++;
                if (uploadedChunks === totalChunks) {
                    console.log("All chunks uploaded");

                    const combine = await fetch(
                        `/api/box-large-files-upload/test-id`,
                        {
                            method: "POST",
                            headers: {
                                "x-file-metadata": JSON.stringify({
                                    randomPrefix: randomPrefix,
                                    totalFileSize: file.size,
                                    mimeType: file.type,
                                    fileName: file.name,
                                    combine: true,
                                }),
                            },
                        },
                    );
                }
            };

            reader.readAsArrayBuffer(chunk);
        }
    }

    const uploadBtn = document.getElementById("upload-btn");
    if (uploadBtn) {
        uploadBtn.addEventListener("click", uploadFile);
    }
</script>
