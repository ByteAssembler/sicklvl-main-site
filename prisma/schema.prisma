// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../drive/database.db" // env("DATABASE_URL")
}

model Customer {
  id          String  @id @default(cuid())
  name        String
  description String?

  email           String @unique
  hashed_password String

  show Boolean @default(false)

  folders Folder[]
  // shared_folders FolderShare[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model File {
  id   String @id @default(cuid())
  name String

  folder    Folder @relation(fields: [folder_id], references: [id])
  folder_id String // Verweis auf den Ordner, zu dem die Datei gehört

  download_count Int @default(0) // Zählt die Anzahl der Downloads der Datei

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Folder {
  id   String @id @default(cuid())
  name String

  owner    Customer @relation(fields: [owner_id], references: [id])
  owner_id String // Verweis auf den Benutzer, dem der Ordner gehört

  files File[] // Dateien im Ordner

  is_public      Boolean @default(false) // Bestimmt, ob der Ordner öffentlich zugänglich ist
  password       String? // Optional: Passwort für den Ordner
  download_count Int     @default(0) // Zählt die Anzahl der Downloads

  access_until DateTime? // Optional: Datum, bis zu dem der Ordner zugänglich ist
  delete_at    DateTime? // Optional: Automatisches Löschdatum

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model PortfolioItem {
  id          String  @id @default(cuid())
  slug        String  @unique
  title       String
  description String?
  content     String

  thumbnail    Image  @relation(fields: [thumbnail_id], references: [id])
  thumbnail_id String @unique

  image_gallery    ImageGallery?
  image_gallery_id String

  video_gallery    VideoGallery @relation(fields: [video_gallery_id], references: [id])
  video_gallery_id String       @unique
}

/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////

model ImageGallery {
  id String @id @default(cuid())

  images Image[]

  portfolio_item    PortfolioItem @relation(fields: [portfolio_item_id], references: [id])
  portfolio_item_id String        @unique
}

model Image {
  id String @id @default(cuid())

  image_variations SingleImage[]

  image_gallery    ImageGallery @relation(fields: [image_gallery_id], references: [id])
  image_gallery_id String

  portfolio_item  PortfolioItem?
  video_thumbnail SingleVideo?
  // customer_avatar Customer?
}

model SingleImage {
  id        String @id @default(cuid())
  file_name String

  width  Int
  height Int

  mime      String
  extension String

  size    Int
  quality Int

  image    Image  @relation(fields: [image_id], references: [id])
  image_id String
}

/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////

model VideoGallery {
  id             String         @id @default(cuid())
  videos         SingleVideo[]
  portfolio_item PortfolioItem?
}

model SingleVideo {
  id String @id @default(cuid())

  thumbnail    Image?  @relation(fields: [thumbnail_id], references: [id])
  thumbnail_id String? @unique

  video_gallery    VideoGallery? @relation(fields: [video_gallery_id], references: [id])
  video_gallery_id String?
}
